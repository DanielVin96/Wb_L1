package main

import "fmt"

//данный код затрачивает лишнюю память, так как создается большая строка в переменной v,
//а затем из нее берется только первые 100 символов и сохраняются в переменную justString
// и после этого строка остается в памяти без надобности
// этого можно избежать обнулив v в конце функции
//также лучше избавиться от глобавльной переменной и создать локально в функции
func createHugeString(len int) string {
	str := make([]rune, len) // руны исользовать вместо байт, для избежания проблем при работе с символами Unicode
	for idx := range str {
		str[idx] = 'л'
	}
	return string(str)
}

func someFunc() string {
	v := createHugeString(1 << 10) // в v записывается рез-т метода с аргументом размером 1024 байта
	defer func() {                 // В конце обнуляем v и освобождаем память
		v = ""
	}()
	// justRune вместо juststring
	justRune := []rune(v)         // Конверт в серз рун , так как символ может содержать больше 1-ого байта и не все 100 попадут в новый срез
	return string(justRune[:100]) // Возвращаем первые 100 символов
}

func main() {
	fmt.Println(someFunc())
}
